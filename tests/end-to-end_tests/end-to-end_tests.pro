#################################Example#####################################
include(../../defaults.pri)

QT += widgets testlib

TEMPLATE = app
TARGET = end-to-end_tests

# Input
SOURCES += ./features/step_definitions/BoostCalculatorQtSteps.cpp

# disable the deprecation messages for legacy boost version
QMAKE_CXXFLAGS += -Wno-deprecated

# link the libraries
LIBS += \
  -L../../build/release/ -lexample \
  -L../../lib/cucumber-cpp/build/src -lcucumber-cpp \
  -L../../lib/boost_1_57_0/libs \
    -lboost_thread \
    -lboost_system \
    -lboost_unit_test_framework \
    -lboost_program_options \
    -lboost_regex \


CONFIG += console

DESTDIR = ../../build/tests

OBJECTS_DIR = $$DESTDIR/.obj
MOC_DIR = $$DESTDIR/.moc
RCC_DIR = $$DESTDIR/.qrc
UI_DIR = $$DESTDIR/.u


# Code coverage reporting (for Linux at least).
COVERAGE_DIR = $$DESTDIR/coverage
unix {
    # Enable gcov compile and link flags.
    QMAKE_CXXFLAGS += -fprofile-arcs -ftest-coverage
    QMAKE_LFLAGS += -fprofile-arcs -ftest-coverage
    QMAKE_CXXFLAGS_RELEASE -= -O1 -O2 -O3
    QMAKE_RPATHDIR += ../../build/release

    # Generate gcov's gcda files by executing the test program.
    gcov.depends = tests
    gcov.target = $$OBJECTS_DIR/tests.gcda
    gcov.commands = $$OBJECTS_DIR/tests

    # Generate an lcov tracefile from gcov's gcda files.
    lcov.depends = $$OBJECTS_DIR/tests.gcda
    lcov.target = $$OBJECTS_DIR/coverage.info
    lcov.commands = lcov --capture --base-directory $$PWD --directory $$OBJECTS_DIR \
                         --output $$OBJECTS_DIR/coverage.info --quiet; \
                    lcov --remove $$OBJECTS_DIR/coverage.info '"/usr/include/*/*"' \
                         '"tests/**/*"' '"build/**/*"'\
                         --output $$OBJECTS_DIR/coverage.info --quiet

    # Generate HTML coverage reports from lcov's tracefile.
    coverage.depends = $$OBJECTS_DIR/coverage.info
    coverage.commands += genhtml --output-directory coverage_html \
                         --prefix `readlink -f ../../src` --quiet \
                         --title PROJECT_NAME coverage.info

    # Include the custom targets in the generated build scripts (eg Makefile).
    QMAKE_EXTRA_TARGETS += coverage gcov lcov

    # Clean up files generated by the above custom targets.
    #QMAKE_CLEAN += $$OBJECTS_DIR/*.gcda $$OBJECTS_DIR/*.gcno $$OBJECTS_DIR/coverage.info
    QMAKE_DISTCLEAN += -r coverage_html
}
